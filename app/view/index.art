{{extend './layouts/layout.art'}} {{block 'body'}}
<div class="container">
  <div class="field has-addons">
    <p class="control">
      <input class="input" type="number" value="" placeholder="请输入金额(单位：元)" id="input">
    </p>
    <p class="control">
      <a class="button is-info" id="submit">
        生成付款码
      </a>
    </p>
  </div>
  <figure class="image is-128x128">
    <img src="" id="qrcode">
  </figure>
</div>
<script src="https://cdn.bootcss.com/socket.io/2.0.4/socket.io.slim.js"></script>
<script>
  const submitBtn = document.getElementById('submit');
  const qrcode = document.getElementById('qrcode');
  const socket = io();

  submitBtn.addEventListener('click', submit, false);

  function submit() {
    const inputEle = document.getElementById('input');

    if (!inputEle.value) {
      alert('金额不能为空');
      return;
    }

    const params = {
      qr_price: inputEle.value
    };

    const searchParams = Object.keys(params).map((key) => {
      return encodeURIComponent(key) + '=' + encodeURIComponent(params[key]);
    }).join('&');

    fetch('/createQrcode', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/x-www-form-urlencoded;charset=UTF-8'
        },
        body: searchParams
      }).then(res => res.json())
      .then(data => {
        socket.emit('chat', {
          socketId: socket.id,
          qrcodeId: data.response.qr_id
        });
        qrcode.src = data.response.qr_code;
      })
      .catch(err => {
        alert(err.message);
      })
  }

  socket.on('connect', () => {
    // socket.emit('chat', {
    //   socketId: socket.id,
    //   qrcodeId: '222'
    // });
  });

  socket.on('res', msg => {
    console.log('res from server: %s!', msg);
    if (msg === 'TRADE_SUCCESS') {
      window.location.href = '/success';
    }
  });

</script>
{{/block}}

